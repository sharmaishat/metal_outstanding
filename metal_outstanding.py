# -*- coding: utf-8 -*-
"""metal_outstanding.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1HOUvI07YggCZfJyoGeHe_L0YJbKsZZY9
"""



import streamlit as st
import pandas as pd

# Function to calculate metal outstanding
def calculate_metal_outstanding(ledger, gold_rate):
    # Convert amount outstanding to metal outstanding
    ledger['Metal Outstanding'] = ledger.apply(
        lambda row: row['Amount Outstanding'] / gold_rate if row['Amount Outstanding'] != 0 else row['Metal Ledger'], axis=1)
    return ledger

# Predefined party names
parties = ['A B Chain', 'Abdul Motiwala', 'Crown Jew', 'Sumangli', 'Anja Jewellers']

# Create an empty DataFrame with predefined party names
ledger_df = pd.DataFrame(parties, columns=['Party'])

# Streamlit UI to input previous metal and amount outstanding for each party
st.title("Metal Outstanding Calculation")

st.write("Please input the previous metal and amount outstanding for each party:")

# Create lists to store the inputs
metal_ledger = []
amount_outstanding = []

for party in parties:
    metal = st.number_input(f"Enter previous metal for {party} (in grams):", key=f"metal_{party}")
    metal_ledger.append(metal)
    amount = st.number_input(f"Enter amount outstanding for {party} (in currency):", key=f"amount_{party}")
    amount_outstanding.append(amount)

# Add inputs to the DataFrame
ledger_df['Metal Ledger'] = metal_ledger
ledger_df['Amount Outstanding'] = amount_outstanding

# Input the current gold rate manually
current_gold_rate = st.number_input("Enter the current gold rate (per gram):", min_value=0.0, step=0.1)

# When the button is clicked, calculate the metal outstanding
if st.button("Calculate Metal Outstanding"):
    if current_gold_rate > 0:
        # Calculate metal outstanding
        updated_ledger = calculate_metal_outstanding(ledger_df, current_gold_rate)

        # Display the updated ledger
        st.write("Updated Ledger with Metal Outstanding:")
        st.dataframe(updated_ledger)
    else:
        st.error("Please enter a valid gold rate.")

